<?xml version="1.0" encoding="UTF-8"?>
<ossec_config>

  <!-- Global configuration -->
  <global>
    <email_notification>no</email_notification> <!-- Enable or disable email alerts globally -->
    <email_to>recipient@example.com</email_to> <!-- Recipient email address -->
    <smtp_server>smtp.example.com</smtp_server> <!-- SMTP server address for sending emails -->
    <email_from>wazuh@example.com</email_from> <!-- Sender email address -->
    <logall>yes</logall> <!-- Log all alerts -->
    <logall_json>yes</logall_json> <!-- Enable JSON format for all logs -->
  </global>

  <!-- Client configuration (agent side) -->
  <client>
    <server-ip>MANAGER_IP</server-ip> <!-- IP of the Wazuh manager -->
    <protocol>tcp</protocol> <!-- Protocol used for communication -->
  </client>

  <!-- Clientless configuration for agentless monitoring -->
  <clientless>
    <type>ssh_integrity_check_bsd</type> <!-- Type of clientless integration -->
    <host>192.168.1.100</host> <!-- Target host for integrity check -->
    <user>root</user> <!-- Username used for SSH connection -->
  </clientless>

  <!-- Remote configuration (manager side) -->
  <remote>
    <connection>secure</connection> <!-- Connection type: plain, secure -->
    <port>1514</port> <!-- Listening port -->
    <protocol>udp</protocol> <!-- Communication protocol -->
  </remote>

  <!-- Localfile - configure log collection -->
  <localfile>
    <log_format>syslog</log_format> <!-- Format of the log to parse -->
    <location>/var/log/auth.log</location> <!-- Path to log file -->
  </localfile>

  <!-- Syscheck - File integrity monitoring -->
<syscheck>
  <frequency>3600</frequency>
  <scan_on_start>yes</scan_on_start>
  <skip_nfs>yes</skip_nfs>
  <auto_ignore>no</auto_ignore>
  <alert_new_files>yes</alert_new_files>

  <directories check_all="yes" realtime="yes" report_changes="yes" tag="config_files">/etc</directories>
  <directories check_all="yes" realtime="yes" tag="web_dir">/var/www</directories>

  <ignore type="sregex">.*\.log$</ignore>
  <nodiff>/etc/shadow</nodiff>
  <remove_old_diff>yes</remove_old_diff>
</syscheck>

  <!-- Rootcheck - Detect rootkits -->
  <rootcheck>
    <disabled>no</disabled> <!-- Enable or disable rootkit checking -->
  </rootcheck>

  <!-- Registry monitoring for Windows -->
  <registry>
    <entry type="registry">HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run</entry>
    <!-- <arch>wow64</arch> --> <!-- Monitor 32-bit registry on 64-bit systems -->
    <!-- <check_all>yes</check_all> --> <!-- Check all entries -->
  </registry>

  <!-- Define command to execute -->
  <command>
    <name>firewalldrop</name> <!-- Command name -->
    <executable>firewalldrop.sh</executable> <!-- Script or binary to execute -->
    <expect>srcip</expect> <!-- Expected parameter -->
    <timeout_allowed>yes</timeout_allowed> <!-- Allow command timeout -->
  </command>

  <!-- Active Response -->
  <active-response>
    <command>firewalldrop</command> <!-- Reference command to trigger -->
    <location>local</location> <!-- Where the command should run -->
    <level>10</level> <!-- Alert level to trigger response -->
    <!-- <timeout>600</timeout> --> <!-- Optional timeout for response -->
  </active-response>

  <!-- Ruleset configuration -->
  <ruleset>
    <ruleset_dir>ruleset/rules</ruleset_dir> <!-- Directory of custom rules -->
    <decoder_dir>ruleset/decoders</decoder_dir> <!-- Directory of decoders -->
    <!-- <list>list.xml</list> --> <!-- Custom list file -->
  </ruleset>

  <!-- Include additional config files -->
  <includes>
    <include>custom_rules.xml</include>
    <!-- <include>more_rules.xml</include> -->
  </includes>

  <!-- Agent metadata labeling -->
  <labels>
    <label key="location">datacenter-1</label> <!-- Custom label for the agent -->
  </labels>

  <!-- Authentication for agent key management -->
  <auth>
    <disabled>no</disabled>
    <purge>yes</purge> <!-- Remove unused agent keys -->
    <!-- <use_source_ip>no</use_source_ip> --> <!-- Match agents by IP -->
  </auth>

  <!-- Cluster configuration -->
  <cluster>
    <name>wazuh-cluster</name> <!-- Cluster name -->
    <node_name>node01</node_name> <!-- Unique node name -->
    <node_type>master</node_type> <!-- Node role: master or worker -->
    <key>SECRET_KEY</key> <!-- Shared cluster key -->
    <bind_addr>0.0.0.0</bind_addr> <!-- IP to bind to -->
    <port>1516</port> <!-- Port for cluster communication -->
    <!-- <hidden>no</hidden> --> <!-- Hide node from other nodes -->
  </cluster>

  <!-- Logging -->
  <logging>
    <log_format>plain</log_format> <!-- Format: plain, json -->
    <log_level>info</log_level> <!-- Logging level: debug, info, warning, error -->
    <!-- <log_path>/var/ossec/logs/ossec.log</log_path> --> <!-- Custom log file path -->
  </logging>

  <!-- Send alerts to external syslog server -->
  <syslog_output>
    <server>10.0.0.1</server> <!-- Syslog server IP -->
    <port>514</port>
    <protocol>udp</protocol>
    <format>default</format>
    <!-- <level>7</level> --> <!-- Alert level threshold -->
  </syslog_output>

  <!-- Enable JSON output globally -->
  <json_output>yes</json_output>

  <!-- Configure the logcollector daemon -->
  <logcollector>
    <remote_commands>no</remote_commands> <!-- Allow or disallow command execution from manager -->
    <!-- <log_processing_thread>2</log_processing_thread> --> <!-- Number of threads -->
  </logcollector>

  <!-- Wodles: extend agent functionality -->
  <wodle name="syscollector">
    <disabled>no</disabled>
    <interval>1h</interval> <!-- Data collection interval -->
    <scan_on_start>yes</scan_on_start>
  </wodle>

  <wodle name="osquery">
    <disabled>yes</disabled>
    <run_daemon>no</run_daemon>
    <log_path>/var/log/osquery/osqueryd.results.log</log_path>
    <config_path>/etc/osquery/osquery.conf</config_path>
  </wodle>

  <wodle name="docker-listener">
    <disabled>yes</disabled> <!-- Enable to collect Docker events -->
  </wodle>

  <wodle name="azure-logs">
    <disabled>yes</disabled>
    <tenant_id>YOUR_TENANT_ID</tenant_id>
    <client_id>YOUR_CLIENT_ID</client_id>
    <client_secret>YOUR_SECRET</client_secret>
    <resources>audit,signin</resources> <!-- Azure resources to monitor -->
  </wodle>

  <wodle name="virustotal">
    <disabled>yes</disabled>
    <api_key>API_KEY</api_key> <!-- API key for VirusTotal -->
  </wodle>

  <!-- Vulnerability detector -->
  <vulnerability-detector>
    <enabled>yes</enabled>
    <interval>5m</interval> <!-- Check interval -->
    <provider>canonical</provider> <!-- OS vulnerability provider -->
    <os>trusty</os> <!-- OS version -->
    <update_interval>1h</update_interval> <!-- Database update frequency -->
  </vulnerability-detector>

  <!-- Security Configuration Assessment -->
  <sca>
    <enabled>yes</enabled> <!-- Enable SCA module -->
    <!-- <scan_on_start>yes</scan_on_start> --> <!-- Run SCA on agent start -->
  </sca>

  <!-- CIS-CAT benchmarking tool -->
  <cis_cat>
    <enabled>yes</enabled>
    <install_java>yes</install_java>
    <java_path>/var/ossec/java/bin/java</java_path>
    <path>/var/ossec/wodles/cis-cat</path>
    <scan_on_start>yes</scan_on_start>
  </cis_cat>

  <!-- Agentless monitoring configuration -->
  <agentless>
    <frequency>3600</frequency>
    <host>router1</host>
    <user>admin</user>
    <type>ssh_integrity_check_bsd</type>
  </agentless>

  <!-- Whodata support for real-time audit -->
  <whodata>
    <enabled>yes</enabled>
  </whodata>

  <!-- Email alerts (used for fine-grained control) -->
  <email_alerts>
    <email_to>admin@example.com</email_to>
    <smtp_server>smtp.example.com</smtp_server>
    <email_from>wazuh@example.com</email_from>
    <level>10</level>
  </email_alerts>

</ossec_config>
